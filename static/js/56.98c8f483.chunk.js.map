{"version":3,"file":"static/js/56.98c8f483.chunk.js","mappings":"yMACaA,EAAY,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MACjC,OAAO,0BACH,kBAAOC,KAAK,OACRF,SAAU,SAAAG,GAAC,OAAIH,EAASG,EAAEC,OAAOH,MAAtB,EACXA,MAAOA,KAGlB,E,mCCHYI,EAAY,WAAO,IAAD,EACrBC,GAAUC,EAAAA,EAAAA,MAChB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAY,UAAGF,EAAaG,IAAI,iBAApB,QAA+B,IAGjDC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MAAeC,KAAKR,EACvB,GAAE,IAEH,IAIMS,GAAmBC,EAAAA,EAAAA,UAAQ,WAC7B,OAAOX,EAAUY,QAAO,SAAAC,GAAQ,OAC9BA,EAASC,KAAKC,cAAcC,SAASX,EAAaY,oBADpB,GAGnC,GAAE,CAACjB,EAAWK,IAGf,OACE,6BACE,SAACf,EAAD,CAAWE,MAAOa,EAAcd,SAbf,SAAAC,GACjBY,EAA0B,KAAVZ,EAAe,CAAEoB,OAAQpB,GAAU,CAAC,EACvD,IAYIkB,EAAiBQ,OAAS,IACzB,wBACGR,EAAiBS,KAAI,SAAAN,GAAQ,OAC5B,yBACM,SAAC,KAAD,CAAMO,GAAE,UAAKP,EAASQ,IAAMC,MAAO,CAACC,KAAM1B,GAA1C,SAAsDgB,EAASC,QAD5DD,EAASQ,GADU,QASzC,C","sources":["components/SearchBox.jsx","pages/Customers.jsx"],"sourcesContent":["\nexport const SearchBox = ({onChange, value}) => {\n    return <div>\n        <input type=\"text\"\n            onChange={e => onChange(e.target.value)}\n            value={value}\n        />\n    </div>\n}","import { SearchBox } from \"components/SearchBox\";\nimport { getCustomers } from \"fakeApi\";\nimport { useEffect, useMemo, useState } from \"react\"\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\n\nexport const Customers = () => {\n    const location= useLocation()\n    const [customers, setCustomers] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams()\n    const filterParams = searchParams.get('filter')??\"\"\n    \n    \n    useEffect(() => {\n        getCustomers().then(setCustomers)\n    }, [])\n\n    const changeFilter = value => {\n        setSearchParams(value !== '' ? { filter: value } : {})\n    }\n\n    const visibleCustomers = useMemo(() => {\n        return customers.filter(customer =>\n          customer.name.toLowerCase().includes(filterParams.toLocaleLowerCase())\n        );\n    }, [customers, filterParams])\n    \n    \n    return (\n      <main>\n        <SearchBox value={filterParams} onChange={changeFilter} />\n        {visibleCustomers.length > 0 && (\n          <ul>\n            {visibleCustomers.map(customer => (\n              <li key={customer.id}>\n                    <Link to={`${customer.id}`} state={{from: location}}>{customer.name}</Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </main>\n    );\n}"],"names":["SearchBox","onChange","value","type","e","target","Customers","location","useLocation","useState","customers","setCustomers","useSearchParams","searchParams","setSearchParams","filterParams","get","useEffect","getCustomers","then","visibleCustomers","useMemo","filter","customer","name","toLowerCase","includes","toLocaleLowerCase","length","map","to","id","state","from"],"sourceRoot":""}